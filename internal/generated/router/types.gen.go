// Package genRouter provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package genRouter

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for OrderStatus.
const (
	Cancelled  OrderStatus = "cancelled"
	Delivered  OrderStatus = "delivered"
	Placed     OrderStatus = "placed"
	Processing OrderStatus = "processing"
	Shipped    OrderStatus = "shipped"
)

// Defines values for PetStatus.
const (
	Available PetStatus = "available"
	Sold      PetStatus = "sold"
)

// Address defines model for Address.
type Address = string

// AnimalCategoryName defines model for AnimalCategoryName.
type AnimalCategoryName = string

// FullName defines model for FullName.
type FullName = string

// Id defines model for Id.
type Id = string

// Order defines model for Order.
type Order struct {
	// DeliveredDate Delivered DateTime(UTC)
	DeliveredDate *time.Time `json:"delivered_date"`
	Id            Id         `json:"id"`
	PetId         Id         `json:"pet_id"`

	// ShippedDate Shipped DateTime(UTC)
	ShippedDate *time.Time `json:"shipped_date"`

	// Status order status.
	Status OrderStatus `json:"status"`
}

// OrderStatus order status.
type OrderStatus string

// Password defines model for Password.
type Password = string

// Pet defines model for Pet.
type Pet struct {
	Category AnimalCategoryName `json:"category"`
	Name     string             `json:"name"`

	// Price Price in USD. Must be positive with max 2 decimal places.
	Price string `json:"price"`

	// Status pet status in the store
	Status *PetStatus `json:"status,omitempty"`
	Tags   *PetTags   `json:"tags,omitempty"`
}

// PetPhotos Pet images (up to 10)
type PetPhotos = []openapi_types.File

// PetStatus pet status in the store
type PetStatus string

// PetTags defines model for PetTags.
type PetTags = []string

// PetWithMetadata defines model for PetWithMetadata.
type PetWithMetadata struct {
	Category AnimalCategoryName `json:"category"`
	Id       Id                 `json:"id"`
	Name     string             `json:"name"`
	PhotoIds []string           `json:"photo_ids"`

	// Price Price in USD. Must be positive with max 2 decimal places.
	Price string `json:"price"`

	// Status pet status in the store
	Status *PetStatus `json:"status,omitempty"`
	Tags   *PetTags   `json:"tags,omitempty"`
}

// PhoneNumber defines model for PhoneNumber.
type PhoneNumber = string

// UserSchema defines model for User.
type UserSchema struct {
	Address     Address     `json:"address"`
	FullName    FullName    `json:"full_name"`
	PhoneNumber PhoneNumber `json:"phone_number"`
	Username    Username    `json:"username"`
}

// Username defines model for Username.
type Username = string

// Cursor defines model for Cursor.
type Cursor = string

// ImageId defines model for ImageId.
type ImageId = Id

// Limit defines model for Limit.
type Limit = int

// OrderId defines model for OrderId.
type OrderId = Id

// PetId defines model for PetId.
type PetId = Id

// AnimalCategory defines model for AnimalCategory.
type AnimalCategory struct {
	Id   Id                 `json:"id"`
	Name AnimalCategoryName `json:"name"`
}

// Generic defines model for Generic.
type Generic struct {
	Message string `json:"message"`
}

// OrderArray defines model for OrderArray.
type OrderArray struct {
	// Count Total number of orders
	Count  int     `json:"count"`
	Orders []Order `json:"orders"`
}

// User defines model for User.
type User = UserSchema

// AnimalCategoryRequest defines model for AnimalCategory.
type AnimalCategoryRequest struct {
	Name AnimalCategoryName `json:"name"`
}

// UserRequest defines model for User.
type UserRequest struct {
	Address     Address     `json:"address"`
	FullName    FullName    `json:"full_name"`
	Password    Password    `json:"password"`
	PhoneNumber PhoneNumber `json:"phone_number"`
	Username    Username    `json:"username"`
}

// FindAnimalCategoryParams defines parameters for FindAnimalCategory.
type FindAnimalCategoryParams struct {
	// Name Name of animal category
	Name AnimalCategoryName `form:"name" json:"name"`
}

// AddAnimalCategoryJSONBody defines parameters for AddAnimalCategory.
type AddAnimalCategoryJSONBody struct {
	Name AnimalCategoryName `json:"name"`
}

// ReplaceAnimalCategoryJSONBody defines parameters for ReplaceAnimalCategory.
type ReplaceAnimalCategoryJSONBody struct {
	Name AnimalCategoryName `json:"name"`
}

// FindPetsParams defines parameters for FindPets.
type FindPetsParams struct {
	// Status Status values that need to be considered for filter
	Status *[]PetStatus `form:"status,omitempty" json:"status,omitempty"`

	// Tags Tags to filter by
	Tags *PetTags `form:"tags,omitempty" json:"tags,omitempty"`

	// Cursor Cursor for pagination (from previous response)
	Cursor *Cursor `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Number of items to return
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`
}

// AddPetMultipartBody defines parameters for AddPet.
type AddPetMultipartBody struct {
	Pet Pet `json:"pet"`

	// Photos Pet images (up to 10)
	Photos PetPhotos `json:"photos"`
}

// ReplacePetMultipartBody defines parameters for ReplacePet.
type ReplacePetMultipartBody struct {
	Pet Pet `json:"pet"`

	// Photos Pet images (up to 10)
	Photos PetPhotos `json:"photos"`
}

// UploadPetImageMultipartBody defines parameters for UploadPetImage.
type UploadPetImageMultipartBody struct {
	// Photos Pet images (up to 10)
	Photos PetPhotos `json:"photos"`
}

// FindOrdersParams defines parameters for FindOrders.
type FindOrdersParams struct {
	// Status Status values that need to be considered for filter
	Status *[]OrderStatus `form:"status,omitempty" json:"status,omitempty"`

	// AfterDate Filter orders placed after this date-time(UTC)
	AfterDate *time.Time `form:"afterDate,omitempty" json:"afterDate,omitempty"`

	// Cursor Cursor for pagination (from previous response)
	Cursor *Cursor `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Number of items to return
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`
}

// PlaceOrdersJSONBody defines parameters for PlaceOrders.
type PlaceOrdersJSONBody = []struct {
	PetId Id `json:"petId"`
}

// PatchUserApplicationMergePatchPlusJSONBody defines parameters for PatchUser.
type PatchUserApplicationMergePatchPlusJSONBody struct {
	Address     *Address     `json:"address,omitempty"`
	FullName    *FullName    `json:"full_name,omitempty"`
	Password    *Password    `json:"password,omitempty"`
	PhoneNumber *PhoneNumber `json:"phone_number,omitempty"`
}

// CreateUserJSONBody defines parameters for CreateUser.
type CreateUserJSONBody struct {
	Address     Address     `json:"address"`
	FullName    FullName    `json:"full_name"`
	Password    Password    `json:"password"`
	PhoneNumber PhoneNumber `json:"phone_number"`
	Username    Username    `json:"username"`
}

// AddAnimalCategoryJSONRequestBody defines body for AddAnimalCategory for application/json ContentType.
type AddAnimalCategoryJSONRequestBody AddAnimalCategoryJSONBody

// ReplaceAnimalCategoryJSONRequestBody defines body for ReplaceAnimalCategory for application/json ContentType.
type ReplaceAnimalCategoryJSONRequestBody ReplaceAnimalCategoryJSONBody

// AddPetMultipartRequestBody defines body for AddPet for multipart/form-data ContentType.
type AddPetMultipartRequestBody AddPetMultipartBody

// ReplacePetMultipartRequestBody defines body for ReplacePet for multipart/form-data ContentType.
type ReplacePetMultipartRequestBody ReplacePetMultipartBody

// UploadPetImageMultipartRequestBody defines body for UploadPetImage for multipart/form-data ContentType.
type UploadPetImageMultipartRequestBody UploadPetImageMultipartBody

// PlaceOrdersJSONRequestBody defines body for PlaceOrders for application/json ContentType.
type PlaceOrdersJSONRequestBody = PlaceOrdersJSONBody

// PatchUserApplicationMergePatchPlusJSONRequestBody defines body for PatchUser for application/merge-patch+json ContentType.
type PatchUserApplicationMergePatchPlusJSONRequestBody PatchUserApplicationMergePatchPlusJSONBody

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody CreateUserJSONBody
